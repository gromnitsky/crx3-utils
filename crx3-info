#!/usr/bin/env node
'use strict';

let crx = require('./index')
let u = crx.u
let argv = process.argv

function main() {
    if (argv[2] && argv.length !== 2+2)
	u.err(`Usage: ${u.progname()} [rsa|ec [0-9]+] < file.zip`)

    u.read().then(crx.parse).then( hdr => {
	return argv[2] ? public_key_extract(hdr, argv[2], argv[3]) : dump(hdr)
    }).then(process.stdout.write.bind(process.stdout)).catch(u.err)
}

function public_key_extract(hdr, proof, index) {
    return crx.der2pem(crx.container(hdr, proof, index).public_key)
}

function dump(hdr) {
    return [
	["id", crx.mpdecimal(hdr.signed_header_data.crx_id)],
	["header", hdr.header_total_len],
	["payload", hdr.payload.length],
	["sha256_with_rsa",
	 `${hdr.sha256_with_rsa.length} main_idx=${crx.rsa_main_index(hdr)}`],
	["sha256_with_ecdsa", hdr.sha256_with_ecdsa.length]
    ].map( ([k,v]) => k.padEnd(20, ' ') + ' ' + v).join`\n` + "\n"
}

main()
